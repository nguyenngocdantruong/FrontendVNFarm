@{
    Layout = "_LayoutAdmin";
    ViewBag.Title = "Chi Tiết Người Dùng";
}

<div class="page-content">
    <!-- Start Container Fluid -->
    <div class="container-xxl">
         <div class="row">
      <div class="col-lg-4 h-100">
                   <div class="card overflow-hidden">
                        <div class="card-body">
            <div
              class="bg-primary profile-bg rounded-top p-5 position-relative mx-n3 mt-n3"
            >
              <img
                id="user-avatar"
                alt=""
                class="avatar-lg border border-light border-3 rounded-circle position-absolute top-100 start-0 translate-middle ms-5"
              />
                             </div>
                             <div class="mt-4 pt-3">
              <h4 id="user-fullname" class="mb-1">
                Đang tải ...<i
                  class="bx bxs-badge-check text-success align-middle"
                ></i>
              </h4>
                                  <div class="mt-2">
                <a id="user-username" href="#!" class="link-primary fs-15"
                  >@@nguyenvana_2024</a
                >
                <p class="fs-15 mb-1 mt-1">
                  <span class="text-dark fw-semibold">Email: </span
                  ><span id="user-email">nguyenvana@gmail.com</span>
                </p>
                <p class="fs-15 mb-0 mt-1">
                  <span class="text-dark fw-semibold">Điện thoại: </span
                  ><span id="user-phone">0987654321</span>
                </p>
                                  </div>
                             </div>
                        </div>
                   </div>

                   <div class="card h-100">
          <div
            class="card-header d-flex align-items-center justify-content-between"
          >
                             <div>
                                  <h4 class="card-title">Thông Tin Khách Hàng</h4>
                             </div>
                             <div>
              <span
                id="user-status-badge"
                class="badge bg-success-subtle text-success px-2 py-1"
                >Đang Hoạt Động</span
              >
                             </div>
                        </div>
                        <div class="card-body py-2">
                             <div class="table-responsive">
                                  <table class="table mb-0">
                <tbody id="user-info-table">
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Mã Khách Hàng:
                      </p>
                                                 </td>
                    <td id="user-id" class="text-dark fw-medium px-0">
                      Đang tải...
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Email Hóa Đơn:
                      </p>
                                                 </td>
                    <td
                      id="user-billing-email"
                      class="text-dark fw-medium px-0"
                    >
                      nguyenvana@gmail.com
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Địa Chỉ Giao Hàng:
                      </p>
                                                 </td>
                    <td id="user-address" class="text-dark fw-medium px-0">
                      123 Đường ABC, Quận 1, TP.HCM
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Ngôn Ngữ:
                      </p>
                                                 </td>
                    <td id="user-language" class="text-dark fw-medium px-0">
                      Tiếng Việt
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Mã Hóa Đơn Gần Nhất:
                      </p>
                                                 </td>
                    <td id="user-last-invoice" class="text-dark fw-medium px-0">
                      #HD2540
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Vai Trò:
                      </p>
                                                 </td>
                    <td id="user-role" class="text-dark fw-medium px-0">
                      Người Dùng
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Ngày Đăng Ký:
                      </p>
                                                 </td>
                    <td
                      id="user-register-date"
                      class="text-dark fw-medium px-0"
                    >
                      01/01/2024
                    </td>
                                            </tr>
                                            <tr>
                                                 <td class="px-0">
                      <p
                        class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark"
                      >
                        Tỉnh/Thành:
                      </p>
                                                 </td>
                    <td id="user-city" class="text-dark fw-medium px-0">
                      TP.HCM
                    </td>
                                            </tr>
                                       </tbody>
                                  </table>
                             </div>
                        </div>
                   </div>
              </div>

      <div class="col-lg-8 h-100">
                   <div class="row">
                        <div class="col-lg-4">
                             <div class="card">
                                  <div class="card-body">
                                       <div class="d-flex align-items-center justify-content-between">
                                            <div>
                    <h4 class="card-title mb-2 d-flex align-items-center gap-2">
                      Tổng giao dịch
                    </h4>
                    <p class="text-muted fw-medium fs-22 mb-0">0</p>
                                            </div>
                                            <div>
                                                 <div class="avatar-md bg-primary bg-opacity-10 rounded">
                      <iconify-icon
                        icon="solar:bill-list-bold-duotone"
                        class="fs-32 text-primary avatar-title"
                      ></iconify-icon>
                                                 </div>
                                            </div>
                                       </div>
                                  </div>
                             </div>
                        </div>
                        <div class="col-lg-4">
                             <div class="card">
                                  <div class="card-body">
                                       <div class="d-flex align-items-center justify-content-between">
                                            <div>
                    <h4 class="card-title mb-2 d-flex align-items-center gap-2">
                      Tổng Đơn Hàng
                    </h4>
                                                 <p class="text-muted fw-medium fs-22 mb-0">219</p>
                                            </div>
                                            <div>
                                                 <div class="avatar-md bg-primary bg-opacity-10 rounded">
                      <iconify-icon
                        icon="solar:box-bold-duotone"
                        class="fs-32 text-primary avatar-title"
                      ></iconify-icon>
                                                 </div>
                                            </div>
                                       </div>
                                  </div>
                             </div>
                        </div>
                        <div class="col-lg-4">
                             <div class="card">
                                  <div class="card-body">
                                       <div class="d-flex align-items-center justify-content-between">
                                            <div>
                    <h4 class="card-title mb-2 d-flex align-items-center gap-2">
                      Tổng Chi Tiêu
                    </h4>
                                                 <p class="text-muted fw-medium fs-22 mb-0">2.189.000đ</p>
                                            </div>
                                            <div>
                                                 <div class="avatar-md bg-primary bg-opacity-10 rounded">
                      <iconify-icon
                        icon="solar:chat-round-money-bold-duotone"
                        class="fs-32 text-primary avatar-title"
                      ></iconify-icon>
                                                 </div>
                                            </div>
                                       </div>
                                  </div>
                             </div>
                        </div>
                   </div>

        <div class="card table-card rounded h-100 border-0">
          <div
            class="card-header align-items-center d-flex border-bottom border-0 pb-2 rounded-top"
          >
            <div class="flex-grow-1">
              <h4 class="mb-0">Đơn Hàng Gần Đây</h4>
            </div>
            <div>
              <div class="dropdown flex-shrink-0">
                <a
                  class="dropdown-toggle text-reset"
                  href="#!"
                  data-bs-toggle="dropdown"
                  aria-haspopup="true"
                  aria-expanded="false"
                >
                  <span class="text-muted text-decoration-underline"
                    >Lọc Đơn Hàng</span
                  >
                </a>
                <div
                  id="orderStatusFilter"
                  class="dropdown-menu dropdown-menu-end"
                >
                  <a class="dropdown-item active" href="#" data-value="-999"
                    >Tất Cả</a
                  >
                </div>
              </div>
            </div>
                        </div>
                        <div class="card-body">
            <!-- Thanh tìm kiếm và lọc -->
            <div class="row mb-3">
              <div class="col-lg-8 col-sm-6">
                <div class="search-box">
                  <input
                    id="orderSearchInput"
                    type="text"
                    class="form-control search"
                    placeholder="Tìm kiếm mã đơn hàng..."
                  />
                  <i class="ri-search-line search-icon"></i>
                </div>
              </div>
              <div class="col-lg-4 col-sm-6">
                <div class="input-group">
                  <span class="input-group-text">Hiển thị</span>
                  <select id="orderPageSize" class="form-select">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">15</option>
                  </select>
                  <span class="input-group-text">đơn</span>
                </div>
              </div>
            </div>

            <div class="table-responsive table-card">
              <table class="table align-middle">
                <thead class="text-muted table-light">
                  <tr>
                    <th scope="col">Mã Đơn</th>
                    <th scope="col">Số Lượng Sản Phẩm</th>
                    <th scope="col">Ngày Đặt</th>
                    <th scope="col">Giá Trị</th>
                    <th scope="col">Trạng Thái</th>
                    <th scope="col">Hành Động</th>
                                            </tr>
                                       </thead>
                <tbody id="recent-orders-table">
                  <tr>
                    <td colspan="6" class="text-center">
                      <div
                        class="d-flex justify-content-center align-items-center p-2"
                      >
                        <div
                          class="spinner-border text-primary me-2"
                          role="status"
                        ></div>
                        <span>Đang tải dữ liệu...</span>
                      </div>
                    </td>
                                            </tr>
                </tbody>
              </table>
            </div>

            <!-- Phân trang -->
            <div class="row d-flex align-items-center mt-4">
              <div class="col-sm-6">
                <div id="orderPagingInfo">
                  Hiển thị <span id="orderStartItem">0</span> đến
                  <span id="orderEndItem">0</span> của
                  <span id="orderTotalItems">0</span> đơn hàng
                </div>
              </div>
              <div class="col-sm-6">
                <div
                  class="pagination-wrap hstack justify-content-center justify-content-sm-end gap-2"
                >
                  <a class="page-item pagination-prev disabled" href="#">
                    <i class="mdi mdi-chevron-left align-middle me-1"></i> Trước
                  </a>
                  <ul
                    id="orderPagination"
                    class="pagination listjs-pagination mb-0"
                  ></ul>
                  <a class="page-item pagination-next" href="#">
                    Sau <i class="mdi mdi-chevron-right align-middle ms-1"></i>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Tab Giao Dịch -->
        <!-- <div class="card">
          <div class="card-header">
            <ul
              class="nav nav-tabs-custom rounded card-header-tabs border-bottom-0"
              role="tablist"
            >
              <li class="nav-item" role="presentation">
                <a
                  class="nav-link active"
                  data-bs-toggle="tab"
                  href="#transactionTab"
                  role="tab"
                  aria-selected="true"
                >
                  <i class="fas fa-exchange-alt me-1 align-middle"></i> Lịch Sử
                  Giao Dịch
                </a>
              </li>
            </ul>
          </div>
          <div class="card-body">
            <div class="tab-content">
              <div
                class="tab-pane active show"
                id="transactionTab"
                role="tabpanel"
              >
                <div class="table-responsive table-card">
                  <table class="table table-centered align-middle table-nowrap">
                    <thead class="text-muted table-light">
                      <tr>
                        <th scope="col">Mã Giao Dịch</th>
                        <th scope="col">Loại</th>
                        <th scope="col">Ngày</th>
                        <th scope="col">Số Tiền</th>
                        <th scope="col">Trạng Thái</th>
                                            </tr>
                    </thead>
                    <tbody id="transaction-history-table">
                      <tr>
                        <td><a href="javascript:void(0);">#TXN234235</a></td>
                        <td>Thanh Toán</td>
                        <td>01/01/2024 10:30</td>
                        <td>1,240,000 đ</td>
                        <td>
                          <span class="badge text-success bg-success-subtle"
                            >Thành Công</span
                          >
                        </td>
                                            </tr>
                                            <tr>
                        <td><a href="javascript:void(0);">#TXN234236</a></td>
                        <td>Hoàn Tiền</td>
                        <td>02/01/2024 14:25</td>
                        <td>350,000 đ</td>
                        <td>
                          <span class="badge text-success bg-success-subtle"
                            >Thành Công</span
                          >
                        </td>
                                            </tr>
                                            <tr>
                        <td><a href="javascript:void(0);">#TXN234237</a></td>
                        <td>Thanh Toán</td>
                        <td>03/01/2024 09:15</td>
                        <td>840,000 đ</td>
                        <td>
                          <span class="badge text-success bg-success-subtle"
                            >Thành Công</span
                          >
                        </td>
                                            </tr>
                                       </tbody>
                                  </table>
                             </div>
                        </div>
                        </div>
                   </div>
        </div> -->

        
              </div>
         </div>

         <!-- Thông tin cửa hàng (nếu có) -->
         <div class="row mt-4">
              <div class="col-12">
                   <div class="card">
          <div
            class="card-header d-flex justify-content-between align-items-center"
          >
                             <h4 class="card-title">Thông Tin Cửa Hàng</h4>
            <span class="badge bg-success-subtle text-success px-2 py-1"
              >Đã Xác Thực</span
            >
                        </div>
                        <div class="card-body store-info">
                             <div class="row">
                                  <div class="col-lg-4" id="store-info">
                                       <div class="d-flex">
                                            <div class="flex-shrink-0">
                    <img
                      src="~/custom/no-image.webp"
                      alt="Store Image"
                      class="img-fluid rounded"
                      style="width: 120px; height: 120px; object-fit: cover"
                    />
                                            </div>
                                            <div class="flex-grow-1 ms-3">
                                                 <h4 class="mt-0">Nông Sản Việt</h4>
                                                 <p class="text-muted mb-2">Cửa hàng nông sản sạch</p>
                                                 <div class="d-flex align-items-center mb-2">
                                                      <div class="d-flex text-warning">
                                                           <i class="bx bxs-star"></i>
                                                           <i class="bx bxs-star"></i>
                                                           <i class="bx bxs-star"></i>
                                                           <i class="bx bxs-star"></i>
                                                           <i class="bx bxs-star-half"></i>
                                                      </div>
                                                      <span class="ms-2">4.5 (124 đánh giá)</span>
                                                 </div>
                                                 <div class="mb-2">
                      <span class="badge bg-info-subtle text-info me-1"
                        >Rau Củ</span
                      >
                      <span class="badge bg-info-subtle text-info me-1"
                        >Trái Cây</span
                      >
                      <span class="badge bg-info-subtle text-info"
                        >Đặc Sản</span
                      >
                                                 </div>
                                            </div>
                                       </div>
                                  </div>
                                  <div class="col-lg-4" id="store-contact">
                                       <h5 class="fs-14">Thông Tin Liên Hệ</h5>
                                       <div class="table-responsive">
                                            <table class="table table-borderless mb-0">
                                                 <tbody>
                                                      <tr>
                        <th scope="row" style="width: 120px">Email:</th>
                                                           <td>nongsanviet@gmail.com</td>
                                                      </tr>
                                                      <tr>
                                                           <th scope="row">Điện thoại:</th>
                                                           <td>0987654321</td>
                                                      </tr>
                                                      <tr>
                                                           <th scope="row">Địa chỉ:</th>
                                                           <td>456 Đường XYZ, Quận 2, TP.HCM</td>
                                                      </tr>
                                                      <tr>
                                                           <th scope="row">Giờ mở cửa:</th>
                                                           <td>07:00 - 21:00</td>
                                                      </tr>
                                                 </tbody>
                                            </table>
                                       </div>
                                  </div>
                                  <div class="col-lg-4" id="store-statistic">
                                       <h5 class="fs-14">Thống Kê Cửa Hàng</h5>
                                       <div class="d-flex flex-wrap gap-3">
                  <div
                    class="bg-light rounded p-2 text-center"
                    style="min-width: 100px"
                  >
                                                 <h5 class="mb-1">167</h5>
                                                 <p class="text-muted mb-0">Sản phẩm</p>
                                            </div>
                  <div
                    class="bg-light rounded p-2 text-center"
                    style="min-width: 100px"
                  >
                                                 <h5 class="mb-1">3.2k</h5>
                                                 <p class="text-muted mb-0">Lượt bán</p>
                                            </div>
                  <div
                    class="bg-light rounded p-2 text-center"
                    style="min-width: 100px"
                  >
                                                 <h5 class="mb-1">94%</h5>
                                                 <p class="text-muted mb-0">Đánh giá tốt</p>
                                            </div>
                                       </div>
                                       <div class="mt-4">
                  <h5 class="fs-14 mb-3">
                    Chứng Nhận <i class="bx bxs-badge-check text-success"></i>
                  </h5>
                                            <div class="d-flex flex-wrap gap-2">
                    <span class="badge bg-success-subtle text-success"
                      >VietGAP</span
                    >
                    <span class="badge bg-success-subtle text-success"
                      >Organic</span
                    >
                    <span class="badge bg-success-subtle text-success"
                      >HACCP</span
                    >
                                            </div>
                                       </div>
                                  </div>
                             </div>
                        </div>
                        <div class="card-footer border-top gap-1 hstack">
                             <a href="#!" class="btn btn-primary w-100">Xem Cửa Hàng</a>
                             <a href="#!" class="btn btn-light w-100">Quản Lý</a>
            <a
              href="#!"
              class="btn btn-soft-dark d-inline-flex align-items-center justify-content-center rounded avatar-sm"
              ><i class="bx bx-edit-alt fs-18"></i
            ></a>
                        </div>
                   </div>
              </div>
         </div>
    </div>
    <!-- End Container Fluid -->

    <!-- ========== Footer Start ========== -->
    <footer class="footer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 text-center">
          &copy; VNFarm. Được phát triển bởi
          <iconify-icon
            icon="iconamoon:heart-duotone"
            class="fs-18 align-middle text-danger"
          ></iconify-icon>
          <a href="#" class="fw-bold footer-text" target="_blank">VNFarm</a>
                </div>
            </div>
        </div>
    </footer>
    <!-- ========== Footer End ========== -->
</div>

<style>
  .loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  .payment-method-item {
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 6px;
  }
</style>

<script type="module">
  import { BaseService } from "/custom/BaseService.js";
  import { EnumService } from "/custom/EnumService.js";
  import { UserRole } from "/custom/Enum.js";
  import key from "/custom/jwt.js";
  import url from "/custom/endpoints.js";

  // Khởi tạo services
  const jwt = key;
  const userService = new BaseService(url.base + "/Users", jwt);
  const orderService = new BaseService(url.base + "/Order", jwt);
  const enumService = new EnumService(url.baseUrl);

  // Ứng dụng quản lý chi tiết người dùng
  const userDetailApp = {
    userId: null,
    userData: null,

    // Biến quản lý đơn hàng và phân trang
    orderFilter: {
      page: 1,
      pageSize: 10,
      keyword: "",
      status: -999,
      storeId: null, // Có thể là null nếu người dùng không phải là người bán
      userId: null,
    },
    orderData: {
      items: [],
      totalItems: 0,
      totalPages: 0,
    },
    orderStatuses: {},

    // Khởi tạo ứng dụng
    init: async function () {
      try {
        // Lấy userId từ URL
        const urlParams = new URLSearchParams(window.location.search);
        this.userId = urlParams.get("id");

        if (!this.userId) {
          this.showError("Không tìm thấy ID người dùng trong URL");
          return;
        }

        // Thiết lập userId cho bộ lọc đơn hàng
        this.orderFilter.userId = this.userId;

        // Hiển thị loading
        this.showLoading(true);

        // Tải thông tin người dùng
        await this.loadUserDetail();

        // Cập nhật UI
        this.renderUserInfo();

        new Promise(async (resolve) => {
          // Khởi tạo các sự kiện
          await this.initEventHandlers();
          resolve();
        }).then(async () => {
          // Tải đơn hàng gần đây
          await this.loadRecentOrders();
        });

        this.showLoading(false);
      } catch (error) {
        console.error("Lỗi khởi tạo ứng dụng:", error);
        this.showError("Đã xảy ra lỗi khi tải dữ liệu. Vui lòng thử lại sau.");
        this.showLoading(false);
      }
    },

    // Khởi tạo các sự kiện
    initEventHandlers: async function () {
      // Sự kiện thay đổi kích thước trang
      const pageSizeSelect = document.getElementById("orderPageSize");
      if (pageSizeSelect) {
        pageSizeSelect.addEventListener("change", () => {
          this.orderFilter.pageSize = parseInt(pageSizeSelect.value);
          this.orderFilter.page = 1; // Reset về trang 1
          this.loadRecentOrders();
        });
      }

      // Sự kiện tìm kiếm
      const searchInput = document.getElementById("orderSearchInput");
      if (searchInput) {
        let debounceTimeout;
        searchInput.addEventListener("input", () => {
          clearTimeout(debounceTimeout);
          debounceTimeout = setTimeout(() => {
            this.orderFilter.keyword = searchInput.value.trim();
            this.orderFilter.page = 1; // Reset về trang 1
            this.loadRecentOrders();
          }, 500);
        });
      }

      // Sự kiện lọc trạng thái đơn hàng
      const statusFilterItems = document.querySelectorAll(
        "#orderStatusFilter .dropdown-item"
      );
      await enumService.getOrderStatuses().then((response) => {
        if (statusFilterItems) {
          if (response) {
            this.orderStatuses = response;
            console.log("Order statuses:", response);
            Object.entries(response).forEach(([key, value]) => {
              let html = `<a class="dropdown-item" href="#" data-value="${key}">${value}</a>`;
              statusFilterItems.innerHTML += html;
            });
          }
          if (statusFilterItems) {
            statusFilterItems.forEach((item) => {
              item.addEventListener("click", (e) => {
                e.preventDefault();

                // Cập nhật UI
                statusFilterItems.forEach((i) => i.classList.remove("active"));
                item.classList.add("active");

                // Cập nhật bộ lọc
                this.orderFilter.status = parseInt(item.getAttribute("data-value")) ?? -999;
                this.orderFilter.page = 1; // Reset về trang 1
                this.loadRecentOrders();
              });
            });
          }
        }
      });
    },

    // Khởi tạo phân trang
    initPagination: function () {
      // Cập nhật thông tin phân trang
      document.getElementById("orderStartItem").textContent =
        this.orderData.items.length > 0
          ? (this.orderFilter.page - 1) * this.orderFilter.pageSize + 1
          : 0;
      document.getElementById("orderEndItem").textContent = Math.min(
        this.orderFilter.page * this.orderFilter.pageSize,
        this.orderData.totalItems
      );
      document.getElementById("orderTotalItems").textContent =
        this.orderData.totalItems;

      // Tạo các nút phân trang
      const paginationContainer = document.getElementById("orderPagination");
      paginationContainer.innerHTML = "";

      // Nếu không có trang nào, không hiển thị phân trang
      if (this.orderData.totalPages <= 1) {
        document.querySelector(".pagination-prev").classList.add("disabled");
        document.querySelector(".pagination-next").classList.add("disabled");
        return;
      }

      // Hiển thị tối đa 5 nút trang
      let startPage = Math.max(1, this.orderFilter.page - 2);
      let endPage = Math.min(this.orderData.totalPages, startPage + 4);

      if (endPage - startPage < 4) {
        startPage = Math.max(1, endPage - 4);
      }

      // Tạo các nút trang
      for (let i = startPage; i <= endPage; i++) {
        const pageItem = document.createElement("li");
        pageItem.className = `page-item ${
          i === this.orderFilter.page ? "active" : ""
        }`;
        pageItem.innerHTML = `<a class="page-link" href="#">${i}</a>`;

        pageItem.addEventListener("click", (e) => {
          e.preventDefault();
          if (i !== this.orderFilter.page) {
            this.orderFilter.page = i;
            this.loadRecentOrders();
          }
        });

        paginationContainer.appendChild(pageItem);
      }

      // Cập nhật nút Trước/Sau
      const prevButton = document.querySelector(".pagination-prev");
      const nextButton = document.querySelector(".pagination-next");

      if (this.orderFilter.page === 1) {
        prevButton.classList.add("disabled");
      } else {
        prevButton.classList.remove("disabled");
        prevButton.addEventListener("click", (e) => {
          e.preventDefault();
          if (this.orderFilter.page > 1) {
            this.orderFilter.page--;
            this.loadRecentOrders();
          }
        });
      }

      if (this.orderFilter.page === this.orderData.totalPages) {
        nextButton.classList.add("disabled");
      } else {
        nextButton.classList.remove("disabled");
        nextButton.addEventListener("click", (e) => {
          e.preventDefault();
          if (this.orderFilter.page < this.orderData.totalPages) {
            this.orderFilter.page++;
            this.loadRecentOrders();
          }
        });
      }
    },

    // Tải thông tin chi tiết người dùng
    loadUserDetail: async function () {
      try {
        const response = await userService.getById(this.userId);

        if (response && response.success && response.data) {
          console.log("User Detail:", response.data);
          this.userData = response.data;

          // Nếu người dùng là người bán, thiết lập storeId cho bộ lọc đơn hàng
          if (this.userData.store) {
            this.orderFilter.storeId = this.userData.store.id;
          }
        } else {
          this.showError("Không thể tải thông tin người dùng");
        }
      } catch (error) {
        console.error("Lỗi tải chi tiết người dùng:", error);
        this.showError("Đã xảy ra lỗi khi tải thông tin người dùng");
        throw error;
      }
    },

    // Tải và hiển thị đơn hàng gần đây
    loadRecentOrders: async function () {
      try {
        // Hiển thị trạng thái loading
        const tableBody = document.getElementById("recent-orders-table");
        tableBody.innerHTML = `
                    <tr>
                        <td colspan="6" class="text-center">
                            <div class="d-flex justify-content-center align-items-center p-2">
                                <div class="spinner-border text-primary me-2" role="status"></div>
                                <span>Đang tải dữ liệu...</span>
</div>
                        </td>
                    </tr>
                `;

        // Sử dụng orderService.find với filter để lấy dữ liệu
        const response = await orderService.find(this.orderFilter);

        if (response && response.success) {
          console.log("Order data:", response);
          // Cập nhật dữ liệu
          this.orderData.items = response.data || [];
          this.orderData.totalItems = response.totalCount || 0;
          this.orderData.totalPages = Math.ceil(this.orderData.totalItems / this.orderFilter.pageSize) || 1;

          // Hiển thị đơn hàng
          this.renderRecentOrders();

          // Cập nhật phân trang
          this.initPagination();
        } else {
          tableBody.innerHTML = `
                        <tr>
                            <td colspan="6" class="text-center">
                                <div class="alert alert-warning mb-0">Đã xảy ra lỗi khi tải dữ liệu</div>
                            </td>
                        </tr>
                    `;
        }
      } catch (error) {
        console.error("Lỗi khi tải đơn hàng gần đây:", error);
        const tableBody = document.getElementById("recent-orders-table");
        tableBody.innerHTML = `
                    <tr>
                        <td colspan="6" class="text-center">
                            <div class="alert alert-warning mb-0">Đã xảy ra lỗi khi tải dữ liệu</div>
                        </td>
                    </tr>
                `;
      }
    },

    // Hiển thị đơn hàng gần đây
    renderRecentOrders: function () {
      console.log("renderRecentOrders:", this.orderData.items);
      const tableBody = document.getElementById("recent-orders-table");
      if (!tableBody) return;

      // Xóa dữ liệu cũ
      tableBody.innerHTML = "";

      if (!this.orderData.items || this.orderData.items.length === 0) {
        tableBody.innerHTML = `
                    <tr>
                        <td colspan="6" class="text-center">Không có đơn hàng nào</td>
                    </tr>
                `;
        return;
      }

      // Thêm dữ liệu mới
      this.orderData.items.forEach((order) => {
        const statusClass = this.getOrderStatusClass(order.status);

        tableBody.innerHTML += `
                    <tr>
                        <td>
                            <a href="00_order_detail.html?orderId=${
                              order.id
                            }">#${order.orderCode}</a>
                        </td>
                        <td>${order.itemCount || 0}</td>
                        <td>${this.formatDate(order.createdAt)}</td>
                        <td>${this.formatCurrency(
                          order.finalAmount || order.totalAmount
                        )}</td>
                        <td><span class="badge ${statusClass}">${
          this.orderStatuses[order.status]
        }</span></td>
                        <td>
                            <div class="dropdown">
                                <a class="btn border-0 p-0 dropdown-toggle hide-arrow" href="javascript:void(0)" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </a>
                                <div class="dropdown-menu dropdown-menu-end">
                                    <a class="dropdown-item" href="/Admin/OrderDetail?orderId=${
                                      order.id
                                    }">Xem Chi Tiết</a>
                                    <button class="dropdown-item" type="button" onclick="window.open('order_invoice.html?id=${
                                      order.id
                                    }', '_blank')">In Hóa Đơn</button>
                                    <button class="dropdown-item" type="button">Tải Hóa Đơn</button>
                                </div>
                            </div>
                        </td>
                    </tr>
                `;
      });
    },

    // Hiển thị thông tin người dùng
    renderUserInfo: function () {
      if (!this.userData) return;

      const user = this.userData;

      // Avatar và thông tin cơ bản
      const avatarImg = document.querySelector("#user-avatar");
      if (avatarImg) {
        //Render image user
        avatarImg.src = `${url.baseUrl}/img/Users/${user.imageUrl}`;
        avatarImg.onerror = function () {
          this.src = `${url.baseUrl}/img/Users/default.jpg`;
        };
      }
      // Tên và trạng thái xác thực
      document.querySelector("#user-fullname").innerHTML = `${
        user.fullName || "Không có tên"
      }${
        user.emailVerified
          ? '<i class="bx bxs-badge-check text-success align-middle ms-1"></i>'
          : ""
      }`;

      // Username và thông tin liên hệ
      document.querySelector("#user-username").textContent = `@@${
        user.email.split("@@")[0]
      }`;
      document.querySelector("#user-email").textContent = user.email;
      document.querySelector("#user-phone").textContent =
        user.phoneNumber || "Không có";

      // Thông tin trong bảng
      const tableRows = document.querySelectorAll("#user-info-table tr");
      // Mã khách hàng
      document.querySelector("#user-id").textContent = `#KH${user.id}`;
      // Email hóa đơn
      tableRows[1].querySelector("td.text-dark").textContent = user.email;
      // Địa chỉ
      tableRows[2].querySelector("td.text-dark").textContent =
        user.address || "Không có";
      // Vai trò
      let roleName = "Không xác định";
      switch (user.role) {
        case 1:
          roleName = "Quản trị viên";
          break;
        case 2:
          roleName = "Người bán";
          break;
        case 3:
          roleName = "Người mua";
          break;
      }
      tableRows[5].querySelector("td.text-dark").textContent = roleName;
      // Ngày đăng ký
      const registerDate = this.formatDate(user.createdAt);
      tableRows[6].querySelector("td.text-dark").textContent = registerDate;

      // Cập nhật trạng thái
      const statusBadge = document.querySelector("#user-status-badge");
      if (user.isActive) {
        statusBadge.className =
          "badge bg-success-subtle text-success px-2 py-1";
        statusBadge.textContent = "Đang Hoạt Động";
      } else {
        statusBadge.className = "badge bg-danger-subtle text-danger px-2 py-1";
        statusBadge.textContent = "Không Hoạt Động";
      }

      // Hiển thị phương thức thanh toán
      this.renderPaymentMethods();

      // Nếu người dùng là người bán, hiển thị thông tin cửa hàng
      if (user.store) {
        this.renderStoreInfo(user.store);
      } else {
        // Ẩn phần thông tin cửa hàng nếu không phải người bán
        document.querySelector(".row.mt-4").style.display = "none";
      }

      // Cập nhật thống kê
      this.updateUserStats();
    },

    // Cập nhật các thống kê của người dùng
    updateUserStats: async function () {
      try {
        // Gọi API để lấy thống kê
        const statsResponse = await userService.getById(
          `stats?id=${this.userId}`
        );

        if (statsResponse && statsResponse.success && statsResponse.data) {
          console.log("statsResponse:", statsResponse);
          const stats = statsResponse.data;

          // Cập nhật UI
          document.querySelector(
            ".row .col-lg-4:nth-child(1) .card-body .fw-medium"
          ).textContent = stats.transactionCount || 0;

          document.querySelector(
            ".row .col-lg-4:nth-child(2) .card-body .fw-medium"
          ).textContent = stats.orderCount || 0;

          document.querySelector(
            ".row .col-lg-4:nth-child(3) .card-body .fw-medium"
          ).textContent = this.formatCurrency(stats.totalRevenue || 0);
        }
      } catch (error) {
        console.error("Lỗi khi tải thống kê người dùng:", error);
      }
    },

    // Lấy class CSS cho trạng thái đơn hàng
    getOrderStatusClass: function (status) {
      switch (status) {
        case 4: // Đã giao
        case 5: // Hoàn thành
          return "text-success bg-success-subtle";
        case 3: // Đang giao
        case 1: // Đang xử lý
        case 8: // Đã xác nhận đơn hàng
          return "text-primary bg-primary-subtle";
        case 6: // Đã hủy
          return "text-danger bg-danger-subtle";
        case 0: // Chờ xác nhận
          return "text-warning bg-warning-subtle";
        case 7: // Hoàn tiền
          return "text-info bg-info-subtle";
        default:
          return "text-secondary bg-secondary-subtle";
      }
    },

    // Hiển thị danh sách phương thức thanh toán
    renderPaymentMethods: function () {
      if (
        !this.userData ||
        !this.userData.paymentMethods ||
        this.userData.paymentMethods.length === 0
      ) {
        // Thêm thông tin "Không có phương thức thanh toán" vào bảng
        const paymentRow = document.createElement("tr");
        paymentRow.innerHTML = `
                    <td class="px-0">
                        <p class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark">Phương Thức Thanh Toán: </p>
                    </td>
                    <td class="text-dark fw-medium px-0">Không có phương thức thanh toán nào</td>
                `;
        document.querySelector(".table tbody").appendChild(paymentRow);
        return;
      }

      // Thêm danh sách phương thức thanh toán
      const paymentRow = document.createElement("tr");
      paymentRow.innerHTML = `
                <td class="px-0">
                    <p class="d-flex mb-0 align-items-center gap-1 fw-semibold text-dark">Phương Thức Thanh Toán: </p>
                </td>
                <td class="text-dark fw-medium px-0">
                    <div class="payment-methods-list">
                    </div>
                </td>
            `;
      document.querySelector(".table tbody").appendChild(paymentRow);

      const paymentMethodsList = paymentRow.querySelector(
        ".payment-methods-list"
      );

      this.userData.paymentMethods.forEach((method, index) => {
        let paymentTypeIcon = "";
        let paymentTypeName = "";

        switch (method.paymentType) {
          case 1:
            paymentTypeIcon = '<i class="bx bxs-bank text-primary"></i>';
            paymentTypeName = "Chuyển khoản ngân hàng";
            break;
          case 2:
            paymentTypeIcon = '<i class="bx bxs-credit-card text-info"></i>';
            paymentTypeName = "Thẻ tín dụng/ghi nợ";
            break;
          case 3:
            paymentTypeIcon = '<i class="bx bxl-paypal text-primary"></i>';
            paymentTypeName = "PayPal";
            break;
          case 4:
            paymentTypeIcon = '<i class="bx bxs-wallet text-success"></i>';
            paymentTypeName = "Ví điện tử";
            break;
          default:
            paymentTypeIcon = '<i class="bx bx-money text-secondary"></i>';
            paymentTypeName = "Khác";
        }

        const methodElement = document.createElement("div");
        methodElement.className =
          "payment-method-item d-flex align-items-center mb-2";
        methodElement.innerHTML = `
                    <span class="me-2">${paymentTypeIcon}</span>
                    <div>
                        <div class="fw-medium">${method.cardName} - ${
          method.accountHolderName
        }</div>
                        <div class="text-muted small">${paymentTypeName} - ${this.maskAccountNumber(
          method.accountNumber
        )}</div>
                    </div>
                `;

        paymentMethodsList.appendChild(methodElement);

        // Thêm dấu phân cách, trừ item cuối cùng
        if (index < this.userData.paymentMethods.length - 1) {
          const divider = document.createElement("hr");
          divider.className = "my-2";
          paymentMethodsList.appendChild(divider);
        }
      });
    },

    // Ẩn một phần số tài khoản
    maskAccountNumber: function (accountNumber) {
      if (!accountNumber) return "N/A";

      if (accountNumber.length <= 4) {
        return accountNumber;
      }

      const lastFourDigits = accountNumber.slice(-4);
      const maskedPart = "*".repeat(accountNumber.length - 4);
      return maskedPart + lastFourDigits;
    },

    // Hiển thị thông tin cửa hàng
    renderStoreInfo: function (store) {
      if (!store) {
        document.querySelector(".row.mt-4").style.display = "none";
        return;
      }

      // Hiển thị phần cửa hàng
      document.querySelector(".row.mt-4").style.display = "block";

      // Cập nhật tiêu đề và trạng thái cửa hàng
      const storeHeader = document.querySelector(".card-header h4.card-title");
      if (storeHeader) {
        storeHeader.textContent = "Thông Tin Khách Hàng";
      }

      // Cập nhật trạng thái xác thực cửa hàng
      const storeVerificationBadge = document.querySelector(
        ".card-header .badge"
      );
      if (storeVerificationBadge) {
        let badgeClass = "";
        let badgeText = "";

        switch (store.verificationStatus) {
          case 1: // Đã xác thực
            badgeClass = "bg-success-subtle text-success";
            badgeText = "Đã Xác Thực";
            break;
          case 0: // Đang xét duyệt
            badgeClass = "bg-warning-subtle text-warning";
            badgeText = "Đang Xét Duyệt";
            break;
          case -1: // Chưa xác thực
            badgeClass = "bg-danger-subtle text-danger";
            badgeText = "Chưa Xác Thực";
            break;
          default:
            badgeClass = "bg-secondary-subtle text-secondary";
            badgeText = "Không xác định";
        }

        storeVerificationBadge.className = `badge ${badgeClass} px-2 py-1`;
        storeVerificationBadge.textContent = badgeText;
      }

      // Cập nhật thông tin cửa hàng
      const storeSection = document.querySelector(".card-body.store-info");

      // Phần 1: Thông tin cơ bản và logo cửa hàng
      const storeInfoColumn = storeSection.querySelector(
        "#store-info"
      );
      if (storeInfoColumn) {
        storeInfoColumn.innerHTML = `
                    <div class="d-flex">
                        <div class="flex-shrink-0">
                            <img src="${`${url.baseUrl}/img/Stores/${store.logoUrl}`}" alt="Store Logo" 
                                class="img-fluid rounded" style="width: 120px; height: 120px; object-fit: cover;"
                                onerror="this.src='${url.baseUrl}/img/Stores/default.jpg'" id="store-logo">
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h4 class="mt-0">${
                              store.name || "Không có tên"
                            }</h4>
                            <p class="text-muted mb-2">${
                              store.description || "Không có mô tả"
                            }</p>
                            <div class="d-flex align-items-center mb-2">
                                ${this.generateRatingStars(store.averageRating)}
                                <span class="ms-2">${store.averageRating.toFixed(
                                  1
                                )} (${store.reviewCount} đánh giá)</span>
                            </div>
                            <div class="mb-2">
                                <span class="badge bg-info-subtle text-info me-1">
                                    ${this.getBusinessTypeName(
                                      store.businessType
                                    )}
                                </span>
                                <span class="badge ${
                                  store.isActive
                                    ? "bg-success-subtle text-success"
                                    : "bg-danger-subtle text-danger"
                                }">
                                    ${
                                      store.isActive
                                        ? "Đang hoạt động"
                                        : "Tạm ngưng"
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                `;
      }

      // Phần 2: Thông tin liên hệ
      const storeContactColumn = storeSection.querySelector(
        "#store-contact"
      );
      if (storeContactColumn) {
        storeContactColumn.innerHTML = `
                    <h5 class="fs-14">Thông Tin Liên Hệ</h5>
                    <div class="table-responsive">
                        <table class="table table-borderless mb-0">
                            <tbody>
                                <tr>
                                    <th scope="row" style="width: 120px;">Email:</th>
                                    <td>${store.email || "Không có"}</td>
                                </tr>
                                <tr>
                                    <th scope="row">Điện thoại:</th>
                                    <td>${store.phoneNumber || "Không có"}</td>
                                </tr>
                                <tr>
                                    <th scope="row">Địa chỉ:</th>
                                    <td>${store.address || "Không có"}</td>
                                </tr>
                                <tr>
                                    <th scope="row">Ngày tạo:</th>
                                    <td>${this.formatDate(store.createdAt)}</td>
                                </tr>
                                <tr>
                                    <th scope="row">Cập nhật:</th>
                                    <td>${this.formatDate(store.updatedAt)}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                `;
      }

      // Phần 3: Thống kê cửa hàng
      const storeStatsColumn = storeSection.querySelector(
        "#store-statistic"
      );
      if (storeStatsColumn) {
        // Hiển thị thông tin chủ cửa hàng
        storeStatsColumn.innerHTML = `
                    <h5 class="fs-14">Thông Tin Chủ Cửa Hàng</h5>
                    <div class="table-responsive">
                        <table class="table table-borderless mb-0">
                            <tbody>
                                <tr>
                                    <th scope="row" style="width: 120px;">Họ tên:</th>
                                    <td>${
                                      store.owner?.fullName || "Không có"
                                    }</td>
                                </tr>
                                <tr>
                                    <th scope="row">Email:</th>
                                    <td>${store.owner?.email || "Không có"}</td>
                                </tr>
                                <tr>
                                    <th scope="row">Điện thoại:</th>
                                    <td>${
                                      store.owner?.phoneNumber || "Không có"
                                    }</td>
                                </tr>
                                <tr>
                                    <th scope="row">Địa chỉ:</th>
                                    <td>${
                                      store.owner?.address || "Không có"
                                    }</td>
                                </tr>
                                <tr>
                                    <th scope="row">Trạng thái:</th>
                                    <td>${
                                      store.owner?.isActive
                                        ? '<span class="badge bg-success-subtle text-success">Đang hoạt động</span>'
                                        : '<span class="badge bg-danger-subtle text-danger">Không hoạt động</span>'
                                    }</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                `;
      }

      // Cập nhật các nút hành động ở footer
      const footerButtons = document.querySelector(".row.mt-4 .card-footer");
      if (footerButtons) {
        footerButtons.innerHTML = `
                    <a href="/Admin/ShopDetail?id=${store.id}" class="btn btn-primary w-100">Xem Cửa Hàng</a>
                    <a href="#" class="btn btn-light w-100">Quản Lý</a>
                    <a href="#!" class="btn btn-soft-dark d-inline-flex align-items-center justify-content-center rounded avatar-sm"><i class='bx bx-edit-alt fs-18'></i></a>
                `;
      }
    },

    // Tạo số sao đánh giá
    generateRatingStars: function (rating) {
      if (!rating) rating = 0;

      let starsHtml = '<div class="d-flex text-warning">';

      // Làm tròn rating đến 0.5 gần nhất
      const roundedRating = Math.round(rating * 2) / 2;

      // Sao đầy
      const fullStars = Math.floor(roundedRating);
      for (let i = 0; i < fullStars; i++) {
        starsHtml += '<i class="bx bxs-star"></i>';
      }

      // Nửa sao (nếu có)
      if (roundedRating % 1 !== 0) {
        starsHtml += '<i class="bx bxs-star-half"></i>';
      }

      // Sao trống
      const emptyStars = 5 - Math.ceil(roundedRating);
      for (let i = 0; i < emptyStars; i++) {
        starsHtml += '<i class="bx bx-star"></i>';
      }

      starsHtml += "</div>";

      return starsHtml;
    },

    // Lấy tên loại hình kinh doanh
    getBusinessTypeName: function (businessType) {
      const businessTypes = {
        0: "Hộ nông dân",
        1: "Doanh nghiệp kinh doanh",
      };

      return businessTypes[businessType] || "Không xác định";
    },

    // Format số tiền thành định dạng tiền tệ VND
    formatCurrency: function (amount) {
      if (!amount) return "0 đ";
      return new Intl.NumberFormat("vi-VN", {
        style: "currency",
        currency: "VND",
        minimumFractionDigits: 0,
      })
        .format(amount)
        .replace("₫", "đ");
    },

    // Hiển thị loading
    showLoading: function (isLoading) {
      const contentElement = document.querySelector(".page-content");

      if (isLoading) {
        // Thêm overlay loading
        const loadingOverlay = document.createElement("div");
        loadingOverlay.className = "loading-overlay";
        loadingOverlay.innerHTML = `
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Đang tải...</span>
                        </div>
                        <p class="mt-2">Đang tải dữ liệu...</p>
                    </div>
                `;

        // Thêm vào đầu content
        contentElement.prepend(loadingOverlay);
      } else {
        // Xóa overlay
        const overlay = document.querySelector(".loading-overlay");
        if (overlay) overlay.remove();
      }
    },

    // Hiển thị thông báo lỗi
    showError: function (message) {
      const contentElement = document.querySelector(".container-xxl");

      // Xóa nội dung hiện tại
      contentElement.innerHTML = "";

      // Thêm thông báo lỗi
      const errorAlert = document.createElement("div");
      errorAlert.className = "alert alert-danger mt-4";
      errorAlert.innerHTML = `
                <div class="d-flex">
                    <i class="bx bx-error-circle fs-3 me-2"></i>
                    <div>
                        <h4 class="alert-heading">Đã xảy ra lỗi!</h4>
                        <p class="mb-0">${message}</p>
                    </div>
                </div>
            `;

      contentElement.appendChild(errorAlert);
    },

    // Định dạng ngày
    formatDate: function (dateString) {
      if (!dateString) return "Không xác định";

      const date = new Date(dateString);
      const day = date.getDate().toString().padStart(2, "0");
      const month = (date.getMonth() + 1).toString().padStart(2, "0");
      const year = date.getFullYear();

      return `${day}/${month}/${year}`;
    },
  };

  // Khởi tạo ứng dụng
  userDetailApp.init();
</script>
