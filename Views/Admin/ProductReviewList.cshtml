@{
    Layout = "_LayoutAdmin";
}

<!-- Start Page Content -->
<div class="page-content">
    <!-- Start Container Fluid -->
    <div class="container-xxl">
        <div class="row">
            <div class="col-lg-4 d-flex flex-column">
                <!-- Thông tin sản phẩm (Mới thêm) -->
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <img id="productImage" src="/no-image.webp" alt="Product Image" class="img-fluid rounded" style="width: 80px; height: 80px; object-fit: cover;">
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <h5 class="card-title mb-1" id="productName">Đang tải ...</h5>
                                <p class="text-muted mb-2" >Mã sản phẩm: <span id="productId">Đang tải</span></p>
                                <div class="d-flex align-items-center">
                                    <span class="badge bg-success me-2" id="productStatus">Còn hàng</span>
                                    <span class="text-primary fw-medium" id="productPrice">120.000đ/kg</span>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="row text-center">
                            <div class="col-12">
                                <h6 class="mb-0" id="goodRatePercent">92%</h6>
                                <small class="text-muted">Đánh giá tốt</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Phần đánh giá trung bình -->
                <div class="card mb-3">
                    <div class="card-body text-center">
                        <div class="avatar-lg mx-auto">
                            <div class="avatar-title bg-light text-primary display-4 rounded-circle">
                                <i class="bx bxs-star"></i>
                            </div>
                        </div>
                        <h4 class="mt-3" id="averageRating">4.8/5</h4>
                        <p class="text-muted mb-0">Điểm Đánh Giá Trung Bình</p>
                        <hr class="my-3">
                        <div class="text-start">
                            <div class="d-flex align-items-center mb-2">
                                <div class="flex-shrink-0">
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-warning" id="star5Bar" role="progressbar" style="width: 80%"></div>
                                    </div>
                                </div>
                                <div class="flex-shrink-0 ms-2">
                                    <span class="text-muted" id="star5Count">156</span>
                                </div>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <div class="flex-shrink-0">
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-warning" id="star4Bar" role="progressbar" style="width: 50%"></div>
                                    </div>
                                </div>
                                <div class="flex-shrink-0 ms-2">
                                    <span class="text-muted" id="star4Count">52</span>
                                </div>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <div class="flex-shrink-0">
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-warning" id="star3Bar" role="progressbar" style="width: 35%"></div>
                                    </div>
                                </div>
                                <div class="flex-shrink-0 ms-2">
                                    <span class="text-muted" id="star3Count">32</span>
                                </div>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <div class="flex-shrink-0">
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-warning" id="star2Bar" role="progressbar" style="width: 10%"></div>
                                    </div>
                                </div>
                                <div class="flex-shrink-0 ms-2">
                                    <span class="text-muted" id="star2Count">12</span>
                                </div>
                            </div>
                            <div class="d-flex align-items-center">
                                <div class="flex-shrink-0">
                                    <i class="bx bxs-star text-warning"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                    <i class="bx bxs-star text-muted"></i>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-warning" id="star1Bar" role="progressbar" style="width: 5%"></div>
                                    </div>
                                </div>
                                <div class="flex-shrink-0 ms-2">
                                    <span class="text-muted" id="star1Count">4</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Phần thống kê đánh giá -->
                <div class="card flex-fill">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Thống Kê Đánh Giá</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <div class="flex-grow-1">
                                <p class="text-muted mb-0">Tổng Số Đánh Giá</p>
                            </div>
                            <div class="flex-shrink-0">
                                <h6 class="mb-0" id="totalReviews">0</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-8 d-flex flex-column">
                <div class="card flex-fill">
                    <div class="card-header d-flex align-items-center">
                        <h5 class="card-title mb-0 flex-grow-1">Danh Sách Đánh Giá</h5>
                    </div>

                    <div class="card-body overflow-auto" style="max-height: 750px;" id="reviewsList">
                        <!-- Danh sách đánh giá sẽ được render bằng JavaScript -->
                        </div>
                        
                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <div class="pagination-info">
                            <span id="paginationInfo">Trang 1/1</span>
                        </div>
                        <ul class="pagination pagination-rounded mb-0" id="reviewPagination">
                            <!-- Phân trang sẽ được render bằng JavaScript -->
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Container Fluid -->
</div>
<!-- End Page Content -->

<!-- JAVASCRIPT -->
<script type="module">
    import { BaseService } from "/custom/BaseService.js";
    import { EnumService } from "/custom/EnumService.js";
    import url from "/Custom/endpoints.js";
    import key from "/Custom/jwt.js";

    const enumService = new EnumService(url.baseUrl);
    
    const app = {
        productId: null,
        productService: null,
        categoryService: null,
        units: {},
        reviews: [], // Lưu trữ tất cả reviews
        reviewsPerPage: 2, // Số lượng reviews hiển thị mỗi trang
        currentPage: 1, // Trang hiện tại
        
        init: function() {
            const productUrl = url.base + "/Product";
            const categoryUrl = url.base + "/Category";
            // Khởi tạo BaseService
            this.productService = new BaseService(productUrl, key);
            this.categoryService = new BaseService(categoryUrl, key);

            enumService.getUnitTypes()
            .then(units => {
                console.log("Units: ",units);
                this.units = units;
            })
            .catch(error => {
                console.error("Lỗi khi tải danh sách đơn vị:", error);
            });
            
            // Lấy productId từ URL
            const urlParams = new URLSearchParams(window.location.search);
            this.productId = urlParams.get('id');
            
            if (!this.productId) {
                this.showError('Không tìm thấy mã sản phẩm');
                return;
            }
            
            // Tải dữ liệu đánh giá sản phẩm
            this.loadProductReviews();
            
            // Tải danh mục sản phẩm
            this.loadCategories();
        },
        
        loadProductReviews: async function() {
            this.showLoading(true);
            
            try {
                // Gọi API để lấy thông tin đánh giá sản phẩm
                const response = await this.productService.getById(`${this.productId}/reviews`);
                if (response && response.success && response.data) {
                    console.log("Response product review: ",response.data);
                    // Hiển thị thông tin sản phẩm
                    this.renderProductInfo(response.data.product);
                    
                    // Lưu trữ tất cả reviews
                    this.reviews = response.data.reviews || [];
                    
                    // Cập nhật tổng số reviews
                    document.getElementById('totalReviews').textContent = this.reviews.length;
                    
                    // Hiển thị reviews trang đầu tiên
                    this.renderReviewsPage(1);
                } else {
                    this.showError('Không thể tải dữ liệu đánh giá sản phẩm');
                }
            } catch (error) {
                console.error('Lỗi khi tải dữ liệu đánh giá:', error);
                this.showError('Có lỗi xảy ra khi tải dữ liệu đánh giá');
            } finally {
                this.showLoading(false);
            }
        },
        
        renderProductInfo: function(product) {
            if (!product) return;
            
            // Cập nhật ảnh sản phẩm nếu có
            if(product.imageUrl) {
                document.getElementById('productImage').src = url.baseUrl + "/img/Products/" + product.imageUrl;
            }

            // Cập nhật thông tin sản phẩm
            document.getElementById('productName').textContent = product.name || 'Không có tên sản phẩm';
            document.getElementById('productId').textContent = product.id || '';
            document.getElementById('productStatus').textContent = product.stockQuantity > 0 ? 'Còn hàng' : 'Hết hàng';
            document.getElementById('productPrice').textContent = this.formatCurrency(product.price || 0) + ' / ' + (this.units[product.unit] || '');
            
            // Tính phần trăm đánh giá tốt (4-5 sao)
            const totalReviews = product.reviewStar1Count + product.reviewStar2Count + 
                                product.reviewStar3Count + product.reviewStar4Count + 
                                product.reviewStar5Count;
            
            const goodReviews = product.reviewStar4Count + product.reviewStar5Count;
            const goodPercentage = totalReviews > 0 ? Math.round((goodReviews / totalReviews) * 100) : 0;
            
            document.getElementById('goodRatePercent').textContent = goodPercentage + '%';
            
            // Cập nhật đánh giá trung bình
            document.getElementById('averageRating').textContent = product.averageRating.toFixed(1) + '/5';
            
            // Cập nhật biểu đồ đánh giá
            this.updateRatingBars(product);
        },
        
        updateRatingBars: function(product) {
            const totalReviews = product.reviewStar1Count + product.reviewStar2Count + 
                                product.reviewStar3Count + product.reviewStar4Count + 
                                product.reviewStar5Count;
            
            // Cập nhật số lượng và thanh tiến trình cho từng loại sao
            this.updateRatingBar('star5', product.reviewStar5Count, totalReviews);
            this.updateRatingBar('star4', product.reviewStar4Count, totalReviews);
            this.updateRatingBar('star3', product.reviewStar3Count, totalReviews);
            this.updateRatingBar('star2', product.reviewStar2Count, totalReviews);
            this.updateRatingBar('star1', product.reviewStar1Count, totalReviews);
        },
        
        updateRatingBar: function(starId, count, total) {
            const percentage = total > 0 ? Math.round((count / total) * 100) : 0;
            
            document.getElementById(`${starId}Count`).textContent = count;
            document.getElementById(`${starId}Bar`).style.width = `${percentage}%`;
        },
        
        renderReviewsPage: function(page) {
            this.currentPage = page;
            const startIndex = (page - 1) * this.reviewsPerPage;
            const endIndex = startIndex + this.reviewsPerPage;
            const pageReviews = this.reviews.slice(startIndex, endIndex);
            
            this.renderReviews(pageReviews);
            this.updatePagination();
        },
        
        renderReviews: function(reviews) {
            const reviewsList = document.getElementById('reviewsList');
            reviewsList.innerHTML = '';
            
            if (!reviews || reviews.length === 0) {
                this.renderEmptyReviews();
                return;
            }
            
            reviews.forEach(review => {
                const reviewElement = document.createElement('div');
                reviewElement.className = 'border-bottom pb-3 mb-3';
                
                const stars = this.generateStarRating(review.rating);
                const reviewDate = this.formatDate(review.createdAt);
                
                // Tạo phần phản hồi của shop nếu có
                const shopResponse = review.shopResponse 
                    ? `<div class="mt-3 border-start border-4 border-primary p-3 bg-light">
                        <p class="text-muted mb-0"><i class="bx bx-store me-1"></i> Phản hồi từ shop: ${review.shopResponse}</p>
                   </div>`
                : '';
            
                // Tạo phần ảnh review nếu có
                const reviewImage = review.imageUrl
                    ? `<div class="d-flex gap-2">
                        <img src="${url.baseUrl}/img/Reviews/${review.imageUrl}" class="avatar-md rounded" onerror="this.src='/no-image.webp'" alt="Review Image">
                   </div>`
                : '';
            
                reviewElement.innerHTML = `
                    <div class="d-flex align-items-center mb-3">
                        <div class="flex-shrink-0">
                            <img src="/custom/default.jpg" class="avatar rounded-circle" alt="">
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="mb-0">Người dùng #${review.userId}</h6>
                            <div class="d-flex align-items-center">
                                <div class="text-warning me-2">
                                    ${stars}
                                </div>
                                <small class="text-muted">${reviewDate}</small>
                            </div>
                        </div>
                        <div class="flex-shrink-0">
                            <div class="dropdown">
                                <button class="btn btn-light btn-sm" type="button" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-horizontal-rounded"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="#">Trả Lời</a></li>
                                    <li><a class="dropdown-item" href="#">Báo Cáo</a></li>
                                </ul>
                    </div>
                </div>
                    </div>
                    <div class="mb-3">
                        <p class="text-muted mb-0">${review.content || 'Không có nội dung đánh giá'}</p>
                    </div>
                    ${reviewImage}
                    ${shopResponse}
                `;
                
                reviewsList.appendChild(reviewElement);
            });
        },
        
        renderEmptyReviews: function() {
            const reviewsList = document.getElementById('reviewsList');
            reviewsList.innerHTML = `
            <div class="text-center py-5">
                    <i class="bx bx-star text-muted mb-3" style="font-size: 48px;"></i>
                <h5>Chưa có đánh giá nào</h5>
                <p class="text-muted">Sản phẩm này chưa có đánh giá từ khách hàng.</p>
            </div>
        `;
        },

        updatePagination: function() {
            const paginationContainer = document.getElementById('reviewPagination');
        paginationContainer.innerHTML = '';
            
            const totalPages = Math.ceil(this.reviews.length / this.reviewsPerPage);
            
            // Cập nhật thông tin phân trang
            document.getElementById('paginationInfo').textContent = `Trang ${this.currentPage}/${totalPages || 1}`;
        
        if (totalPages <= 1) return;
        
        const pagination = document.createElement('ul');
            pagination.className = 'pagination pagination-rounded mb-0';
        
        // Previous button
        const prevLi = document.createElement('li');
            prevLi.className = `page-item ${this.currentPage === 1 ? 'disabled' : ''}`;
            prevLi.innerHTML = `<a class="page-link" href="javascript:void(0);"><i class="bx bx-chevron-left"></i></a>`;
            if (this.currentPage > 1) {
                prevLi.querySelector('a').addEventListener('click', (e) => {
                    e.preventDefault();
                    this.renderReviewsPage(this.currentPage - 1);
                });
            }
        pagination.appendChild(prevLi);
        
            // Hiển thị các trang xung quanh trang hiện tại
            const maxPagesToShow = 5; // Số lượng nút trang tối đa hiển thị
            let startPage = Math.max(1, this.currentPage - Math.floor(maxPagesToShow / 2));
            let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
            
            if (endPage - startPage + 1 < maxPagesToShow) {
                startPage = Math.max(1, endPage - maxPagesToShow + 1);
            }
            
            // Nút trang đầu tiên nếu cần
            if (startPage > 1) {
                const firstPageLi = document.createElement('li');
                firstPageLi.className = 'page-item';
                firstPageLi.innerHTML = `<a class="page-link" href="javascript:void(0);">1</a>`;
                firstPageLi.querySelector('a').addEventListener('click', (e) => {
                    e.preventDefault();
                    this.renderReviewsPage(1);
                });
                pagination.appendChild(firstPageLi);
                
                // Dấu ba chấm nếu không liền kề với trang đầu
                if (startPage > 2) {
                    const ellipsisLi = document.createElement('li');
                    ellipsisLi.className = 'page-item disabled';
                    ellipsisLi.innerHTML = `<a class="page-link" href="javascript:void(0);">...</a>`;
                    pagination.appendChild(ellipsisLi);
                }
            }
            
            // Các nút trang số
        for (let i = startPage; i <= endPage; i++) {
            const pageLi = document.createElement('li');
                pageLi.className = `page-item ${i === this.currentPage ? 'active' : ''}`;
                pageLi.innerHTML = `<a class="page-link" href="javascript:void(0);">${i}</a>`;
                
                pageLi.querySelector('a').addEventListener('click', (e) => {
                    e.preventDefault();
                    if (i !== this.currentPage) {
                        this.renderReviewsPage(i);
                    }
                });
                
            pagination.appendChild(pageLi);
        }
            
            // Dấu ba chấm và nút trang cuối nếu cần
            if (endPage < totalPages) {
                if (endPage < totalPages - 1) {
                    const ellipsisLi = document.createElement('li');
                    ellipsisLi.className = 'page-item disabled';
                    ellipsisLi.innerHTML = `<a class="page-link" href="javascript:void(0);">...</a>`;
                    pagination.appendChild(ellipsisLi);
                }
                
                const lastPageLi = document.createElement('li');
                lastPageLi.className = 'page-item';
                lastPageLi.innerHTML = `<a class="page-link" href="javascript:void(0);">${totalPages}</a>`;
                lastPageLi.querySelector('a').addEventListener('click', (e) => {
                    e.preventDefault();
                    this.renderReviewsPage(totalPages);
                });
                pagination.appendChild(lastPageLi);
            }
        
        // Next button
        const nextLi = document.createElement('li');
            nextLi.className = `page-item ${this.currentPage === totalPages ? 'disabled' : ''}`;
            nextLi.innerHTML = `<a class="page-link" href="javascript:void(0);"><i class="bx bx-chevron-right"></i></a>`;
            if (this.currentPage < totalPages) {
                nextLi.querySelector('a').addEventListener('click', (e) => {
                    e.preventDefault();
                    this.renderReviewsPage(this.currentPage + 1);
                });
            }
        pagination.appendChild(nextLi);
        
        paginationContainer.appendChild(pagination);
        },
        
        showLoading: function(isLoading) {
            const loadingOverlay = document.getElementById('loadingOverlay');
            if (!loadingOverlay && isLoading) {
                const overlay = document.createElement('div');
                overlay.id = 'loadingOverlay';
                overlay.className = 'loading-overlay';
                overlay.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>';
                document.body.appendChild(overlay);
            } else if (loadingOverlay) {
                loadingOverlay.style.display = isLoading ? 'flex' : 'none';
            }
        },
        
        showError: function(message) {
            const errorElement = document.createElement('div');
            errorElement.className = 'alert alert-danger';
            errorElement.textContent = message;
            
            const contentContainer = document.querySelector('.page-content');
            contentContainer.prepend(errorElement);
        },
        
        generateStarRating: function(rating) {
        let stars = '';
        for (let i = 1; i <= 5; i++) {
            if (i <= rating) {
                    stars += '<i class="bx bxs-star text-warning"></i>';
            } else if (i - 0.5 <= rating) {
                    stars += '<i class="bx bxs-star-half text-warning"></i>';
            } else {
                    stars += '<i class="bx bx-star text-muted"></i>';
                }
        }
        return stars;
        },

        formatCurrency: function(amount) {
        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
        },

        formatDate: function(dateString) {
        if (!dateString) return '';
        
        const date = new Date(dateString);
        return new Intl.DateTimeFormat('vi-VN', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit'
        }).format(date);
        },
        
        // Thêm phương thức load và hiển thị danh mục
        loadCategories: async function() {
            try {
                const response = await this.categoryService.getAll();
                if (response && response.success && response.data) {
                    this.renderCategories(response.data);
                } else {
                    console.error('Không thể tải danh mục sản phẩm');
                }
            } catch (error) {
                console.error('Lỗi khi tải danh mục sản phẩm:', error);
            }
        },
        
        renderCategories: function(categories) {
            
        }
    };
    
    // Khởi tạo ứng dụng khi trang đã tải xong
    app.init();
</script>

<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }
    
    .review-item {
        margin-bottom: 1.5rem;
        border-bottom: 1px solid #eee;
        padding-bottom: 1.5rem;
    }
    
    .review-item:last-child {
        border-bottom: none;
    }
    
    .seller-reply {
        background-color: #f8f9fa;
        border-left: 3px solid #0d6efd;
    }
</style> 